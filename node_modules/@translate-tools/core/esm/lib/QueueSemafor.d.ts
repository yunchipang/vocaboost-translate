interface Options {
    timeout?: number;
    hijackPrevention?: boolean;
}
/**
 * Semafor for the flow control in queues
 *
 * @example
 * const semafor = QueueSemafor({ timeout: 100 });
 * items.map(async item=> {
 * 	const free = await semafor.take();
 * 	// do something with item...
 * 	free();
 * })
 */
export declare class QueueSemafor {
    private readonly timeout;
    private readonly hijackPrevention;
    constructor(options?: Options);
    private wait;
    private lastAccess;
    private semafor;
    take(): Promise<() => void>;
}
export {};
