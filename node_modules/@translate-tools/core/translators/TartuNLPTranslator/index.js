"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TartuNLPTranslator = void 0;
var _axios = _interopRequireDefault(require("axios"));
var _BaseTranslator = require("../../util/BaseTranslator");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var __extends = void 0 && (void 0).__extends || function () {
  var extendStatics = function (d, b) {
    extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
    };
    return extendStatics(d, b);
  };
  return function (d, b) {
    if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __assign = void 0 && (void 0).__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function () {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
var TartuNLPTranslator = /** @class */function (_super) {
  __extends(TartuNLPTranslator, _super);
  function TartuNLPTranslator() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  TartuNLPTranslator.isSupportedAutoFrom = function () {
    return false;
  };
  TartuNLPTranslator.getSupportedLanguages = function () {
    // eslint-disable
    // prettier-ignore
    return ["en", "et", "de", "lt", "lv", "fi", "ru", "no", "hu", "se"];
    // eslint-enable
  };

  TartuNLPTranslator.prototype.getLengthLimit = function () {
    return 5000;
  };
  TartuNLPTranslator.prototype.getRequestsTimeout = function () {
    return 300;
  };
  TartuNLPTranslator.prototype.checkLimitExceeding = function (text) {
    if (Array.isArray(text)) {
      var arrayLen = text.reduce(function (acc, text) {
        return acc + text.length;
      }, 0);
      var extra = arrayLen - this.getLengthLimit();
      return extra > 0 ? extra : 0;
    } else {
      var extra = text.length - this.getLengthLimit();
      return extra > 0 ? extra : 0;
    }
  };
  TartuNLPTranslator.prototype.translate = function (text, from, to) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2 /*return*/, this.translateBatch([text], from, to).then(function (resp) {
          return resp[0];
        })];
      });
    });
  };
  TartuNLPTranslator.prototype.translateBatch = function (text, from, to) {
    return __awaiter(this, void 0, void 0, function () {
      return __generator(this, function (_a) {
        return [2 /*return*/, _axios.default.post('https://api.tartunlp.ai/translation/v2', JSON.stringify({
          text: text,
          src: from,
          tgt: to
        }), {
          withCredentials: false,
          headers: __assign({
            'Content-Type': 'application/json'
          }, this.options.headers)
        }).then(function (rsp) {
          if (typeof rsp.data !== 'object' || rsp.data === null || !Array.isArray(rsp.data.result)) {
            throw new TypeError('Unexpected data');
          }
          return rsp.data.result;
        })];
      });
    });
  };
  TartuNLPTranslator.translatorName = 'TartuNLPTranslator';
  return TartuNLPTranslator;
}(_BaseTranslator.BaseTranslator);
exports.TartuNLPTranslator = TartuNLPTranslator;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRvcnMvVGFydHVOTFBUcmFuc2xhdG9yL2luZGV4LmpzIiwibmFtZXMiOlsiX2F4aW9zIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfQmFzZVRyYW5zbGF0b3IiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIlRhcnR1TkxQVHJhbnNsYXRvciIsIl9zdXBlciIsIl9fZXh0ZW5kcyIsImlzU3VwcG9ydGVkQXV0b0Zyb20iLCJnZXRTdXBwb3J0ZWRMYW5ndWFnZXMiLCJwcm90b3R5cGUiLCJnZXRMZW5ndGhMaW1pdCIsImdldFJlcXVlc3RzVGltZW91dCIsImNoZWNrTGltaXRFeGNlZWRpbmciLCJ0ZXh0IiwiQXJyYXkiLCJpc0FycmF5IiwiYXJyYXlMZW4iLCJyZWR1Y2UiLCJhY2MiLCJsZW5ndGgiLCJleHRyYSIsInRyYW5zbGF0ZSIsImZyb20iLCJ0byIsInRyYW5zbGF0ZUJhdGNoIiwidGhlbiIsInJlc3AiLCJheGlvcyIsInBvc3QiLCJKU09OIiwic3RyaW5naWZ5Iiwic3JjIiwidGd0Iiwid2l0aENyZWRlbnRpYWxzIiwiaGVhZGVycyIsIl9fYXNzaWduIiwib3B0aW9ucyIsInJzcCIsImRhdGEiLCJyZXN1bHQiLCJUeXBlRXJyb3IiLCJ0cmFuc2xhdG9yTmFtZSIsIkJhc2VUcmFuc2xhdG9yIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInRyYW5zbGF0b3JzL1RhcnR1TkxQVHJhbnNsYXRvci9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnO1xuXG5pbXBvcnQgeyBsYW5nQ29kZSwgbGFuZ0NvZGVXaXRoQXV0byB9IGZyb20gJy4uLy4uL3R5cGVzL1RyYW5zbGF0b3InO1xuaW1wb3J0IHsgQmFzZVRyYW5zbGF0b3IgfSBmcm9tICcuLi8uLi91dGlsL0Jhc2VUcmFuc2xhdG9yJztcblxuZXhwb3J0IGNsYXNzIFRhcnR1TkxQVHJhbnNsYXRvciBleHRlbmRzIEJhc2VUcmFuc2xhdG9yIHtcblx0cHVibGljIHN0YXRpYyByZWFkb25seSB0cmFuc2xhdG9yTmFtZSA9ICdUYXJ0dU5MUFRyYW5zbGF0b3InO1xuXG5cdHB1YmxpYyBzdGF0aWMgaXNTdXBwb3J0ZWRBdXRvRnJvbSgpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRwdWJsaWMgc3RhdGljIGdldFN1cHBvcnRlZExhbmd1YWdlcygpOiBsYW5nQ29kZVtdIHtcblx0XHQvLyBlc2xpbnQtZGlzYWJsZVxuXHRcdC8vIHByZXR0aWVyLWlnbm9yZVxuXHRcdHJldHVybiBbXG5cdFx0XHRcImVuXCIsIFwiZXRcIiwgXCJkZVwiLCBcImx0XCIsIFwibHZcIixcblx0XHRcdFwiZmlcIiwgXCJydVwiLCBcIm5vXCIsIFwiaHVcIiwgXCJzZVwiLFxuXHRcdF07XG5cdFx0Ly8gZXNsaW50LWVuYWJsZVxuXHR9XG5cblx0cHVibGljIGdldExlbmd0aExpbWl0KCkge1xuXHRcdHJldHVybiA1MDAwO1xuXHR9XG5cblx0cHVibGljIGdldFJlcXVlc3RzVGltZW91dCgpIHtcblx0XHRyZXR1cm4gMzAwO1xuXHR9XG5cblx0cHVibGljIGNoZWNrTGltaXRFeGNlZWRpbmcodGV4dDogc3RyaW5nIHwgc3RyaW5nW10pIHtcblx0XHRpZiAoQXJyYXkuaXNBcnJheSh0ZXh0KSkge1xuXHRcdFx0Y29uc3QgYXJyYXlMZW4gPSB0ZXh0LnJlZHVjZSgoYWNjLCB0ZXh0KSA9PiBhY2MgKyB0ZXh0Lmxlbmd0aCwgMCk7XG5cdFx0XHRjb25zdCBleHRyYSA9IGFycmF5TGVuIC0gdGhpcy5nZXRMZW5ndGhMaW1pdCgpO1xuXHRcdFx0cmV0dXJuIGV4dHJhID4gMCA/IGV4dHJhIDogMDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29uc3QgZXh0cmEgPSB0ZXh0Lmxlbmd0aCAtIHRoaXMuZ2V0TGVuZ3RoTGltaXQoKTtcblx0XHRcdHJldHVybiBleHRyYSA+IDAgPyBleHRyYSA6IDA7XG5cdFx0fVxuXHR9XG5cblx0cHVibGljIGFzeW5jIHRyYW5zbGF0ZSh0ZXh0OiBzdHJpbmcsIGZyb206IGxhbmdDb2RlV2l0aEF1dG8sIHRvOiBsYW5nQ29kZSkge1xuXHRcdHJldHVybiB0aGlzLnRyYW5zbGF0ZUJhdGNoKFt0ZXh0XSwgZnJvbSwgdG8pLnRoZW4oKHJlc3ApID0+IHJlc3BbMF0pO1xuXHR9XG5cblx0cHVibGljIGFzeW5jIHRyYW5zbGF0ZUJhdGNoKHRleHQ6IHN0cmluZ1tdLCBmcm9tOiBsYW5nQ29kZVdpdGhBdXRvLCB0bzogbGFuZ0NvZGUpIHtcblx0XHRyZXR1cm4gYXhpb3Ncblx0XHRcdC5wb3N0KFxuXHRcdFx0XHQnaHR0cHM6Ly9hcGkudGFydHVubHAuYWkvdHJhbnNsYXRpb24vdjInLFxuXHRcdFx0XHRKU09OLnN0cmluZ2lmeSh7IHRleHQsIHNyYzogZnJvbSwgdGd0OiB0byB9KSxcblx0XHRcdFx0e1xuXHRcdFx0XHRcdHdpdGhDcmVkZW50aWFsczogZmFsc2UsXG5cdFx0XHRcdFx0aGVhZGVyczoge1xuXHRcdFx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcblx0XHRcdFx0XHRcdC4uLnRoaXMub3B0aW9ucy5oZWFkZXJzLFxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdH0sXG5cdFx0XHQpXG5cdFx0XHQudGhlbigocnNwKSA9PiB7XG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHR0eXBlb2YgcnNwLmRhdGEgIT09ICdvYmplY3QnIHx8XG5cdFx0XHRcdFx0cnNwLmRhdGEgPT09IG51bGwgfHxcblx0XHRcdFx0XHQhQXJyYXkuaXNBcnJheSgocnNwLmRhdGEgYXMgYW55KS5yZXN1bHQpXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBUeXBlRXJyb3IoJ1VuZXhwZWN0ZWQgZGF0YScpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIChyc3AuZGF0YSBhcyBhbnkpLnJlc3VsdCBhcyBzdHJpbmdbXTtcblx0XHRcdH0pO1xuXHR9XG59XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFB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
