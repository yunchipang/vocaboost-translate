"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getConfig = void 0;
// This code contains parts from https://github.com/plainheart/bing-translate-api/blob/e5ac48d346096681a758856bd606f147854d07cb/src/index.js
var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
      label: 0,
      sent: function () {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
    f,
    y,
    t,
    g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
    return this;
  }), g;
  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");
    while (g && (g = 0, op[0] && (_ = 0)), _) try {
      if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
      if (y = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _.label++;
          return {
            value: op[1],
            done: false
          };
        case 5:
          _.label++;
          y = op[1];
          op = [0];
          continue;
        case 7:
          op = _.ops.pop();
          _.trys.pop();
          continue;
        default:
          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _ = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _.label = op[1];
            break;
          }
          if (op[0] === 6 && _.label < t[1]) {
            _.label = t[1];
            t = op;
            break;
          }
          if (t && _.label < t[2]) {
            _.label = t[2];
            _.ops.push(op);
            break;
          }
          if (t[2]) _.ops.pop();
          _.trys.pop();
          continue;
      }
      op = body.call(thisArg, _);
    } catch (e) {
      op = [6, e];
      y = 0;
    } finally {
      f = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
var __read = void 0 && (void 0).__read || function (o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m) return o;
  var i = m.call(o),
    r,
    ar = [],
    e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
  } catch (error) {
    e = {
      error: error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"])) m.call(i);
    } finally {
      if (e) throw e.error;
    }
  }
  return ar;
};
var fetchConfig = function () {
  return __awaiter(void 0, void 0, void 0, function () {
    var pageText, IIGSearch, IIG, IIDSearch, IID, TokenParamsSearch, _a, key, token, lifetime;
    return __generator(this, function (_b) {
      switch (_b.label) {
        case 0:
          return [4 /*yield*/, fetch('https://www.bing.com/translator').then(function (r) {
            return r.text();
          })];
        case 1:
          pageText = _b.sent();
          IIGSearch = pageText.match(/IG:"([^"]+)"/);
          if (IIGSearch === null) {
            throw new Error("Can't find IIG");
          }
          IIG = IIGSearch[1];
          IIDSearch = pageText.match(/data-iid="([^"]+)"/);
          if (IIDSearch === null) {
            throw new Error("Can't find IID");
          }
          IID = IIDSearch[1];
          TokenParamsSearch = pageText.match(/params_RichTranslateHelper\s?=\s?([^\]]+\])/);
          if (TokenParamsSearch === null) {
            throw new Error("Can't find token params");
          }
          _a = __read(JSON.parse(TokenParamsSearch[1]), 3), key = _a[0], token = _a[1], lifetime = _a[2];
          if (typeof key !== 'number') {
            throw new Error('Invalid key type');
          }
          if (typeof token !== 'string') {
            throw new Error('Invalid token type');
          }
          if (typeof lifetime !== 'number') {
            throw new Error('Invalid token lifetime type');
          }
          return [2 /*return*/, {
            IID: IID,
            IIG: IIG,
            key: key,
            token: token,
            lifetime: lifetime
          }];
      }
    });
  });
};
var lastConfig = null;
function isTokenExpired() {
  if (lastConfig === null) {
    return true;
  }
  var tokenTs = lastConfig.key,
    tokenExpiryInterval = lastConfig.lifetime;
  return Date.now() - tokenTs > tokenExpiryInterval;
}
var getConfig = function () {
  return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          if (!isTokenExpired()) return [3 /*break*/, 2];
          return [4 /*yield*/, fetchConfig()];
        case 1:
          lastConfig = _a.sent();
          _a.label = 2;
        case 2:
          return [2 /*return*/, lastConfig];
      }
    });
  });
};
exports.getConfig = getConfig;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNsYXRvcnMvdW5zdGFibGUvQmluZ1RyYW5zbGF0b3JQdWJsaWMvZ2V0Q29uZmlnLmpzIiwibmFtZXMiOlsiZmV0Y2hDb25maWciLCJfX2F3YWl0ZXIiLCJmZXRjaCIsInRoZW4iLCJyIiwidGV4dCIsInBhZ2VUZXh0IiwiX2IiLCJzZW50IiwiSUlHU2VhcmNoIiwibWF0Y2giLCJFcnJvciIsIklJRyIsIklJRFNlYXJjaCIsIklJRCIsIlRva2VuUGFyYW1zU2VhcmNoIiwiX2EiLCJfX3JlYWQiLCJKU09OIiwicGFyc2UiLCJrZXkiLCJ0b2tlbiIsImxpZmV0aW1lIiwibGFzdENvbmZpZyIsImlzVG9rZW5FeHBpcmVkIiwidG9rZW5UcyIsInRva2VuRXhwaXJ5SW50ZXJ2YWwiLCJEYXRlIiwibm93IiwiZ2V0Q29uZmlnIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInRyYW5zbGF0b3JzL3Vuc3RhYmxlL0JpbmdUcmFuc2xhdG9yUHVibGljL2dldENvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGNvZGUgY29udGFpbnMgcGFydHMgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcGxhaW5oZWFydC9iaW5nLXRyYW5zbGF0ZS1hcGkvYmxvYi9lNWFjNDhkMzQ2MDk2NjgxYTc1ODg1NmJkNjA2ZjE0Nzg1NGQwN2NiL3NyYy9pbmRleC5qc1xuXG5jb25zdCBmZXRjaENvbmZpZyA9IGFzeW5jICgpID0+IHtcblx0Y29uc3QgcGFnZVRleHQgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly93d3cuYmluZy5jb20vdHJhbnNsYXRvcicpLnRoZW4oKHIpID0+IHIudGV4dCgpKTtcblxuXHRjb25zdCBJSUdTZWFyY2ggPSBwYWdlVGV4dC5tYXRjaCgvSUc6XCIoW15cIl0rKVwiLyk7XG5cdGlmIChJSUdTZWFyY2ggPT09IG51bGwpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBmaW5kIElJR1wiKTtcblx0fVxuXG5cdGNvbnN0IElJRyA9IElJR1NlYXJjaFsxXTtcblxuXHRjb25zdCBJSURTZWFyY2ggPSBwYWdlVGV4dC5tYXRjaCgvZGF0YS1paWQ9XCIoW15cIl0rKVwiLyk7XG5cdGlmIChJSURTZWFyY2ggPT09IG51bGwpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCBmaW5kIElJRFwiKTtcblx0fVxuXG5cdGNvbnN0IElJRCA9IElJRFNlYXJjaFsxXTtcblxuXHRjb25zdCBUb2tlblBhcmFtc1NlYXJjaCA9IHBhZ2VUZXh0Lm1hdGNoKFxuXHRcdC9wYXJhbXNfUmljaFRyYW5zbGF0ZUhlbHBlclxccz89XFxzPyhbXlxcXV0rXFxdKS8sXG5cdCk7XG5cdGlmIChUb2tlblBhcmFtc1NlYXJjaCA9PT0gbnVsbCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNhbid0IGZpbmQgdG9rZW4gcGFyYW1zXCIpO1xuXHR9XG5cblx0Y29uc3QgW2tleSwgdG9rZW4sIGxpZmV0aW1lXSA9IEpTT04ucGFyc2UoVG9rZW5QYXJhbXNTZWFyY2hbMV0pO1xuXHRpZiAodHlwZW9mIGtleSAhPT0gJ251bWJlcicpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQga2V5IHR5cGUnKTtcblx0fVxuXHRpZiAodHlwZW9mIHRva2VuICE9PSAnc3RyaW5nJykge1xuXHRcdHRocm93IG5ldyBFcnJvcignSW52YWxpZCB0b2tlbiB0eXBlJyk7XG5cdH1cblx0aWYgKHR5cGVvZiBsaWZldGltZSAhPT0gJ251bWJlcicpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdG9rZW4gbGlmZXRpbWUgdHlwZScpO1xuXHR9XG5cblx0cmV0dXJuIHtcblx0XHRJSUQsXG5cdFx0SUlHLFxuXHRcdGtleSxcblx0XHR0b2tlbixcblx0XHRsaWZldGltZSxcblx0fTtcbn07XG5cbmxldCBsYXN0Q29uZmlnOiBudWxsIHwge1xuXHRJSUQ6IHN0cmluZztcblx0SUlHOiBzdHJpbmc7XG5cblx0LyoqXG5cdCAqIFRva2VuIHRpbWVzdGFtcFxuXHQgKi9cblx0a2V5OiBudW1iZXI7XG5cblx0dG9rZW46IHN0cmluZztcblxuXHQvKipcblx0ICogVG9rZW4gbGlmZXRpbWUgaW4gc2VjXG5cdCAqL1xuXHRsaWZldGltZTogbnVtYmVyO1xufSA9IG51bGw7XG5cbmZ1bmN0aW9uIGlzVG9rZW5FeHBpcmVkKCkge1xuXHRpZiAobGFzdENvbmZpZyA9PT0gbnVsbCkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0Y29uc3QgeyBrZXk6IHRva2VuVHMsIGxpZmV0aW1lOiB0b2tlbkV4cGlyeUludGVydmFsIH0gPSBsYXN0Q29uZmlnO1xuXHRyZXR1cm4gRGF0ZS5ub3coKSAtIHRva2VuVHMgPiB0b2tlbkV4cGlyeUludGVydmFsO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0Q29uZmlnID0gYXN5bmMgKCkgPT4ge1xuXHRpZiAoaXNUb2tlbkV4cGlyZWQoKSkge1xuXHRcdGxhc3RDb25maWcgPSBhd2FpdCBmZXRjaENvbmZpZygpO1xuXHR9XG5cblx0cmV0dXJuIGxhc3RDb25maWcgYXMgRXhjbHVkZTx0eXBlb2YgbGFzdENvbmZpZywgbnVsbD47XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsV0FBVyxHQUFHLFNBQUFBLENBQUE7RUFBQSxPQUFBQyxTQUFBOzs7OztVQUNGLHFCQUFNQyxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLFVBQUNDLENBQUM7WUFBSyxPQUFBQSxDQUFDLENBQUNDLElBQUksRUFBRTtVQUFSLENBQVEsQ0FBQzs7VUFBL0VDLFFBQVEsR0FBR0MsRUFBQSxDQUFBQyxJQUFBLEVBQW9FO1VBRS9FQyxTQUFTLEdBQUdILFFBQVEsQ0FBQ0ksS0FBSyxDQUFDLGNBQWMsQ0FBQztVQUNoRCxJQUFJRCxTQUFTLEtBQUssSUFBSSxFQUFFO1lBQ3ZCLE1BQU0sSUFBSUUsS0FBSyxDQUFDLGdCQUFnQixDQUFDOztVQUc1QkMsR0FBRyxHQUFHSCxTQUFTLENBQUMsQ0FBQyxDQUFDO1VBRWxCSSxTQUFTLEdBQUdQLFFBQVEsQ0FBQ0ksS0FBSyxDQUFDLG9CQUFvQixDQUFDO1VBQ3RELElBQUlHLFNBQVMsS0FBSyxJQUFJLEVBQUU7WUFDdkIsTUFBTSxJQUFJRixLQUFLLENBQUMsZ0JBQWdCLENBQUM7O1VBRzVCRyxHQUFHLEdBQUdELFNBQVMsQ0FBQyxDQUFDLENBQUM7VUFFbEJFLGlCQUFpQixHQUFHVCxRQUFRLENBQUNJLEtBQUssQ0FDdkMsNkNBQTZDLENBQzdDO1VBQ0QsSUFBSUssaUJBQWlCLEtBQUssSUFBSSxFQUFFO1lBQy9CLE1BQU0sSUFBSUosS0FBSyxDQUFDLHlCQUF5QixDQUFDOztVQUdyQ0ssRUFBQSxHQUFBQyxNQUFBLENBQXlCQyxJQUFJLENBQUNDLEtBQUssQ0FBQ0osaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBeERLLEdBQUcsR0FBQUosRUFBQSxLQUFFSyxLQUFLLEdBQUFMLEVBQUEsS0FBRU0sUUFBUSxHQUFBTixFQUFBO1VBQzNCLElBQUksT0FBT0ksR0FBRyxLQUFLLFFBQVEsRUFBRTtZQUM1QixNQUFNLElBQUlULEtBQUssQ0FBQyxrQkFBa0IsQ0FBQzs7VUFFcEMsSUFBSSxPQUFPVSxLQUFLLEtBQUssUUFBUSxFQUFFO1lBQzlCLE1BQU0sSUFBSVYsS0FBSyxDQUFDLG9CQUFvQixDQUFDOztVQUV0QyxJQUFJLE9BQU9XLFFBQVEsS0FBSyxRQUFRLEVBQUU7WUFDakMsTUFBTSxJQUFJWCxLQUFLLENBQUMsNkJBQTZCLENBQUM7O1VBRy9DLHNCQUFPO1lBQ05HLEdBQUcsRUFBQUEsR0FBQTtZQUNIRixHQUFHLEVBQUFBLEdBQUE7WUFDSFEsR0FBRyxFQUFBQSxHQUFBO1lBQ0hDLEtBQUssRUFBQUEsS0FBQTtZQUNMQyxRQUFRLEVBQUFBO1dBQ1I7TUFBQzs7O0NBQ0Y7QUFFRCxJQUFJQyxVQUFVLEdBZVYsSUFBSTtBQUVSLFNBQVNDLGNBQWNBLENBQUE7RUFDdEIsSUFBSUQsVUFBVSxLQUFLLElBQUksRUFBRTtJQUN4QixPQUFPLElBQUk7O0VBR0osSUFBS0UsT0FBTyxHQUFvQ0YsVUFBVSxDQUFBSCxHQUE5QztJQUFZTSxtQkFBbUIsR0FBS0gsVUFBVSxDQUFBRCxRQUFmO0VBQ25ELE9BQU9LLElBQUksQ0FBQ0MsR0FBRyxFQUFFLEdBQUdILE9BQU8sR0FBR0MsbUJBQW1CO0FBQ2xEO0FBRU8sSUFBTUcsU0FBUyxHQUFHLFNBQUFBLENBQUE7RUFBQSxPQUFBNUIsU0FBQTs7OztlQUNwQnVCLGNBQWMsRUFBRSxFQUFoQjtVQUNVLHFCQUFNeEIsV0FBVyxFQUFFOztVQUFoQ3VCLFVBQVUsR0FBR1AsRUFBQSxDQUFBUixJQUFBLEVBQW1COzs7VUFHakMsc0JBQU9lLFVBQThDO01BQUM7OztDQUN0RDtBQUFDTyxPQUFBLENBQUFELFNBQUEsR0FBQUEsU0FBQSJ9
